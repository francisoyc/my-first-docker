<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.francis.docker</groupId>
    <artifactId>my-first-docker</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>my-first-docker</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- Docker maven plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <!--镜像名称-->
                    <imageName>registry.cn-shenzhen.aliyuncs.com/oyc/my-first-docker:1.0.0</imageName>
                    <!-- 使用Dockerfile方式构建镜像时不要此配置 -->
                    <!-- <baseImage>java</baseImage>
                    <entryPoint>[ "java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "/app.jar" ]</entryPoint>-->
                    <!-- 指定Dockerfile所在的路径 -->
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <!--指定推送的镜像，192.168.2.101为虚拟机ip-->
                    <!--<dockerHost>http://192.168.2.101:2375</dockerHost>-->
                    <!--或者windows上配置环境变量DOCKER_HOST：tcp://192.168.2.101:2375，我的是配置了环境变量-->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                   <!-- &lt;!&ndash;推送阿里云相关&ndash;&gt;
                    <serverId>docker-francis</serverId>
                    &lt;!&ndash;表示阿里云的docker仓库地址。阿里云的容器镜像服务地址&ndash;&gt;
                    <registryUrl>registry.cn-shenzhen.aliyuncs.com</registryUrl>
                    &lt;!&ndash;表示推送镜像到仓库。&ndash;&gt;
                    <pushImage>true</pushImage>-->
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
